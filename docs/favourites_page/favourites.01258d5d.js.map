{"mappings":"imBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,wJCAxC,IAAAC,IAAoB,MAAQJ,EAAA,SAAAK,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCAnF,IAAAL,IAAoB,MAAQJ,EAAA,SAAAK,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCGpG,IAAIC,EAAQC,aAAaC,QAAQ,gBAC7BC,EAAQX,KAAKC,MAAMQ,aAAaC,QAAQ,eAAiB,MACzDE,EAAQZ,KAAKC,MAAMQ,aAAaC,QAAQ,cAAgB,MACxDG,EAAIF,EAAMG,QAAQN,GAElBO,EAAaC,SAASC,cAAc,MACpCC,EAASF,SAASC,cAAc,sBAEhCE,EAAeV,aAAaC,QAAQ,aAEpCU,EAAQ,GACRC,EAAU,G,eA2DAC,I,IAET,MAAAF,EAAA1B,OAAAsB,SAAAC,cAAA,MAAAM,YAAA,qBACJ,QAAA5B,KAAAyB,EAAA,CAEQ,IAAAd,EAAA,wDAAiDX,IACtD,MAAA6B,QAAAC,MAAAnB,GACAoB,QAAAF,EAAWG,OAGfN,EAAAO,KAAAF,EAAAG,MAAA,GAeA,CAMA,CALA,MAAAC,GACAC,QAAQD,MAAA,SAAAA,EACR,UA9DA,SAAmBE,GACf,IAAIC,EAAe,GACnBf,EAAOgB,UAAY,GACnB,IAAK,IAAIvC,EAAK,EAAGA,EAAKqC,EAAQtC,OAAQC,IAClCsC,GAAgB,wGAcvBD,EAAArC,GAAAwC,qBAAAH,EAAArC,GAAAyC,sBAAAJ,EAAArC,GAAA0C,oKAI4BL,EACjBrC,GAAS0C,mEAEML,EAAOrC,GAAA2C,8LAGiBN,EAAArC,GAAAwC,gG,EAI/BD,UAAAD,C,CA+BdM,CAAAlB,EAEN,C,UAEAmB,iBAAA,gCA1FA,WACQhC,GAAkB,IAATA,GACTO,EAAWQ,YAAc,YAAYX,EAAMC,KAC3CE,EAAW0B,UAAUC,IAAI,eACrBvB,EACAA,EAAenB,KAAKC,MAAMkB,IAE1BA,EAAe,CAAC,CACZwB,MAAOnC,EACPoC,WAAY,KAEhB5B,SAASC,cAAc,MAAMM,YAAc,kBAG/CP,SAASC,cAAc,MAAMM,YAAc,kCAG/C,IAAIsB,EAAQ1B,EAAa2B,WAAWC,GAAOA,EAAGJ,QAAUnC,IACpDqC,GAAQ,IACRzB,EAAQD,EAAa0B,GAAOD,WAAWI,Q,CAwE/CC,GACA3B,G","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7aa4a9614706c71f.js","node_modules/@parcel/runtime-js/lib/runtime-e558359ac24a2789.js","node_modules/@parcel/runtime-js/lib/runtime-a92ae39e79ae386d.js","src/favourites_page/js/favourites.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"8KcgT\\\":\\\"favourites.01258d5d.js\\\",\\\"11Lkf\\\":\\\"heart_red.cdb1f07e.png\\\",\\\"eBKIm\\\":\\\"heart.4cc18b58.png\\\"}\"));","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"11Lkf\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"eBKIm\")).toString();","import imgMarkerFilled from \"../../recipe_page/img/heart_red.png\";\r\nimport imgMarkerNonFilled from \"../../recipe_page/img/heart.png\";\r\n\r\nlet email = localStorage.getItem(\"welcomeemail\");\r\nlet users = JSON.parse(localStorage.getItem('useremails') || '[]');\r\nlet names = JSON.parse(localStorage.getItem('usernames') || '[]');\r\nlet i = users.indexOf(email);\r\n\r\nlet welcomeMsg = document.querySelector(\"h1\");\r\nlet result = document.querySelector('.result__container');\r\n\r\nlet arrFavorites = localStorage.getItem('favorites');\r\n\r\nlet array = [];\r\nlet dataArr = [];\r\n\r\nfunction checkRegistration() {\r\n    if (email && email != \"\") {\r\n        welcomeMsg.textContent = `Welcome, ${names[i]}`;\r\n        welcomeMsg.classList.add('welcome-msg');\r\n        if (arrFavorites) { // если в сторадже что-то есть\r\n            arrFavorites = JSON.parse(arrFavorites);\r\n        } else {\r\n            arrFavorites = [{\r\n                email: email,\r\n                favRecipes: []\r\n            }]\r\n            document.querySelector(\"h2\").textContent = \"No favourites\";\r\n        }\r\n    } else {\r\n        document.querySelector(\"h2\").textContent = \"You need to register or sign in\";\r\n    };\r\n\r\n    let index = arrFavorites.findIndex((el) => el.email === email);\r\n    if (index > -1) {\r\n        array = arrFavorites[index].favRecipes.slice();\r\n    }\r\n}\r\n\r\nfunction renderFav(dataArr) {\r\n    let generatedFav = '';\r\n    result.innerHTML = '';\r\n    for (let id = 0; id < dataArr.length; id++) {\r\n        generatedFav += `\r\n                <div class=\"result__item\">\r\n                <a href='../recipe_page/recipe.html?id=${dataArr[id].idMeal}'><img src=\"${dataArr[id].strMealThumb}\" alt=\"${dataArr[id].strMeal}\"></a>\r\n                    <div class=\"item__details\">\r\n                        <div class=\"details\">\r\n                            <h2 class=\"item-name\">${dataArr[id].strMeal}</h2>\r\n                            <h3 class=\"item-area\">${dataArr[id].strArea}</h3>\r\n                        </div>\r\n                        \r\n                        <button class=\"view-button\" onclick=\"window.location.href = '../recipe_page/recipe.html?id=${dataArr[id].idMeal}'\">View recipe</button>\r\n                    </div>            \r\n                </div>`\r\n    }\r\n    result.innerHTML = generatedFav;\r\n}\r\n\r\nasync function getRecipes() {\r\n    try {\r\n        if (array.length == 0) {\r\n            document.querySelector(\"h2\").textContent = \"No favourites\";\r\n        } else {\r\n            for (let id of array) {\r\n                let url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\r\n                const response = await fetch(url);\r\n                const data = await response.json();\r\n                dataArr.push(data.meals[0]);\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    } finally {\r\n        renderFav(dataArr);\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    checkRegistration();\r\n    getRecipes(dataArr);\r\n});\r\n\r\n/* <div class = \"recipe__marker\" >\r\n    <\r\n    button class = \"recipe__marker-btn\" > < img src = \"./img/bookmark-filled.svg\"\r\nalt = \"bookmark\"\r\nclass = \"recipe__marker-btn-img\"\r\ndata - id = $ {\r\n        dataArr[d].idMeal\r\n    } > < /button> <\r\n    /div> */\r\n\r\n\r\n\r\n\r\n\r\n// document.addEventListener('click', function (e) {\r\n//     if (e.target.classList.contains('recipe__marker-btn-img')) {\r\n//         e.target.classList.toggle('active');\r\n//     }\r\n//     addFav(e);\r\n// });\r\n\r\n// function addFav(e) {\r\n//     console.log(e.target.dataset.id);\r\n//     if (e.target.classList.contains('active')) {\r\n//         arrFavorites.push(e.target.dataset.id);\r\n//         e.target.src = \"img/bookmark-filled.svg\";\r\n//     } else {\r\n//         e.target.src = \"img/bookmark.svg\";\r\n//         arrFavorites = arrFavorites.filter(el => el !== e.target.dataset.id);\r\n//     }\r\n//     localStorage.setItem('favorites', JSON.stringify(arrFavorites));\r\n//     // checkFav(e);\r\n// }\r\n/* function checkFav(e) {\r\n    if (arrFavorites) { // если в сторадже что-то есть, то парсим\r\n        arrFavorites = JSON.parse(arrFavorites);\r\n        if (arrFavorites.find(el => el == e.target.dataset.id)) {\r\n            console.log(arrFavorites.find(el => el == e.target.dataset.id));\r\n            this.className += ' active';\r\n            this.src = \"img/bookmark-filled.svg\";\r\n        }\r\n    } else {\r\n        // если нет, то присвоим дефолтное значение\r\n        arrFavorites = [];\r\n    }\r\n\r\n}*/"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","URL","resolve","import","meta","url","toString","$89d80e6d5d2b17d9$var$email","localStorage","getItem","$89d80e6d5d2b17d9$var$users","$89d80e6d5d2b17d9$var$names","$89d80e6d5d2b17d9$var$i","indexOf","$89d80e6d5d2b17d9$var$welcomeMsg","document","querySelector","$89d80e6d5d2b17d9$var$result","$89d80e6d5d2b17d9$var$arrFavorites","$89d80e6d5d2b17d9$var$array","$89d80e6d5d2b17d9$var$dataArr","$89d80e6d5d2b17d9$var$getRecipes","textContent","response","fetch","data","json","push","meals","error","console","dataArr","generatedFav","innerHTML","idMeal","strMealThumb","strMeal","strArea","$89d80e6d5d2b17d9$var$renderFav","addEventListener","classList","add","email","favRecipes","index","findIndex","el","slice","$89d80e6d5d2b17d9$var$checkRegistration"],"version":3,"file":"favourites.01258d5d.js.map"}